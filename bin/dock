#!/bin/sh

# eww and polybar configuration dir
eww_dir="$HOME/.config/eww"
polybar_dir="$HOME/.config/polybar"
waybar_dir="$HOME/.config/waybar"

# last used dock
hst_file="$HOME/.cache/bar.lst"

# fallback action when no history is found
launch_default () { launch_eww; }

# default dock position when not set
default_dock_position=top

# initialize running state
is_running=0

usage () {
cat<<EOF
usage: $(basename -- "$0") <command>

choose from:
 status
 launch
 toggle
 reload
 close
 switch
 eww
 polybar
 help
EOF
}

running () {
  if [ "$is_running" = "0" ]; then
      return 1
  fi
  if [ "$is_running" = "1" ] || running_eww || running_polybar || running_waybar; then
    return 0
  fi
  return 1
}

running_eww () {
  "$eww_dir"/launch.sh status > /dev/null 2>&1
}

running_polybar () {
  pgrep polybar > /dev/null
}

running_waybar () {
  pgrep waybar > /dev/null
}

set_padding () {
  position="$(theme get Dock position)"

  wm_padding="$(theme get WM "${position:-"$default_dock_position"}-padding")"

  dockside_padding="$((wm_padding + dock_size + dock_margin))"

  if running; then
    dock_size="$(theme get Dock depth)"
    dock_margin="$(theme get Dock margin)"
    active_dock_negative_margin="$(theme get Dock negative-margin)"
    dockside_padding="$((dockside_padding + dock_size + dock_margin - active_dock_negative_margin))"
  fi

  top_padding="$(theme get WM top-padding)"
  left_padding="$(theme get WM left-padding)"
  right_padding="$(theme get WM right-padding)"
  bottom_padding="$(theme get WM bottom-padding)"

  eval ''"$default_dock_position"'_padding='"$dockside_padding"

  bspc config "${position:-"$default_dock_position"}_padding" "$dockside_padding" ||
    hyprctl keyword "general:gaps_out" "$top_padding,$right_padding,$left_padding,$bottom_padding"
}

launch_dock () {
  dock="$1"
  exec_cmd="${2:-"$dock"}"

  theme edit Dock enabled true
  is_running=1

  # first make room then launch dock
  set_padding

  eval "$exec_cmd"
  echo "$dock" > "$hst_file"
}

launch_eww () {
  theme edit Dock depth 40
  launch_dock eww "$eww_dir"/launch.sh
}

launch_polybar () {
  theme edit Dock depth 40
  launch_dock polybar "$polybar_dir"/launch.sh
}

launch_waybar () {
  theme edit Dock depth 0
  launch_dock waybar
}

close_dock () {
  dock="$1"
  close_cmd="$2"
  proc_name="${3:-"$dock"}"

  theme edit Dock enabled false
  is_running=0

  set_padding

  if eval running_"$dock"; then
    if [ -n "$close_cmd" ]; then
      # try to close politely
      eval "$close_cmd"
    fi

    # make sure it's dead
    killall "$proc_name" &
  fi
}

close_all () {
  close_eww
  close_polybar
  close_waybar
}

close_eww () {
  # first close dock then remove the gap
  close_dock eww "$eww_dir/launch.sh close"
}

close_polybar () {
  # first close dock then remove the gap
  close_dock polybar "polybar-msg cmd quit"
}

close_waybar () {
  close_dock waybar
}

toggle_dock () {
  if running_polybar; then
    close_polybar
  elif running_eww; then
    close_eww
  elif running_waybar; then
    close_waybar
  else
    last_bar="$(cat "$hst_file")"
    if [ -n "$last_bar" ]; then
      eval "launch_${last_bar}"
    else
      launch_default
    fi
  fi
}

while true; do
  case "$1" in
    ""|help)
      usage
      exit
      ;;
    status)
      if running; then
        exit
      else
        exit 1
      fi
      ;;
    launch)
      if running && [ -z "$1" ]; then
        echo "already running"
      fi
      case "$2" in
        eww)
          close_all
          launch_eww
          shift
          ;;
        polybar)
          close_all
          launch_polybar
          shift
          ;;
        waybar)
          close_all
          launch_waybar
          shift
          ;;
        *)
          toggle_dock
          ;;
      esac
      shift
      ;;
    toggle)
      toggle_dock
      shift
      ;;
    reload)
      # if an additional argument is specified
      if [ -n "$2" ]; then
        # exit if it's not running
        pgrep "$2" || exit
      fi

      # reload if running
      if "$0" status>/dev/null; then
        "$0" close
        "$0" launch
      fi
      shift
      ;;
    close)
      close_all
      shift
      ;;
    switch)
      # switch between bars
      if running_polybar; then
        "$0" launch eww
      elif running_eww; then
        "$0" launch waybar
      elif running_waybar; then
        "$0" launch polybar
      else
        # launch last open bar
        toggle_dock
      fi
      break
      ;;
    *)
      echo "unknown option '$1'"
      exit 1
      ;;
  esac
  [ -z "$1" ] && break
done
