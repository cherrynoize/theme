#!/usr/bin/env bash
# rofi theme selector
# https://github.com/cherrynoize/dotfiles
# Author:= cherrynoize
# Thanks:= https://github.com/gh0stzk/dotfiles

wallpaper_themes_dir="${WALL_THEMES_DIR:-"$HOME/.wallpaper-themes"}"
thumbnail_cache_dir="$HOME/.cache/themes/thumbnails"
current_theme="$(theme current)"

rofi_cmd="rofi -dmenu -i -theme ~/.config/rofi/picker/theme-picker.rasi"

launch_rofi () {
  printf "%s\n" "${options[@]}" |
    while read -r theme_name; do
      theme="${theme_map[$theme_name]}"
      wallpaper_dir="$wallpaper_themes_dir/$theme/wallpaper"
      random_wall="$wallpaper_dir/$(random-file "$wallpaper_dir")"
      thumbnail="$(gen-thumbnail "$random_wall" "$thumbnail_cache_dir")"
      echo -en "$theme_name\x00icon\x1f$thumbnail\n"
    done | $rofi_cmd -selected-row "${selected_index:-0}"
}

usage () {
cat<<EOF
launch a rofi dialog to switch between different themes
usage: $(basename -- "$0") [options] [command]

commands:
  help           display this help message and exit

options:
  --recent=bool  sort themes by most recently used

values:
  bool           true or false
EOF
}

case "$1" in
  help)
    usage
    exit
    ;;
  --recent=false)
    list_command="list"
    ;;
  *)
    list_command="recent"
    ;;
esac

mapfile -t themes < <(theme "$list_command")
declare -A theme_map

pop_theme () {
  for i in "${!themes[@]}"; do
    if [ "${themes[i]}" = "$1" ]; then
      unset 'themes[i]'
    fi
  done
}

# list themes
for theme in "${themes[@]}"; do
  theme_name="$(theme name "$theme")" || {
    pop_theme "$theme"
    continue
  }
  theme_map["$theme_name"]="$theme"

  options+=("$theme_name")

  # select current theme by index
  if [ "$current_theme" = "$theme" ]; then
      selected_index="$index"
  fi

  (( index++ ))
done

# launch rofi menu and store result
selected="$(launch_rofi)"

[ -n "$selected" ] || exit 1
theme -n set "${theme_map[$selected]}"
